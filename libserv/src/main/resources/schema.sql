DROP SCHEMA IF  EXISTS librarian CASCADE;
CREATE SCHEMA IF NOT EXISTS librarian;

CREATE TABLE IF NOT EXISTS librarian.users
(
    user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(254) NOT NULL ,
    login VARCHAR(40) NOT NULL ,
    name VARCHAR(40) NOT NULL,
    birthday DATE
);

CREATE TABLE IF NOT EXISTS librarian.genre
(
    genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(40) NOT NULL
);

create table IF NOT EXISTS librarian.authors
(
    author_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
      name VARCHAR(50) NOT NULL

);

CREATE TABLE IF NOT EXISTS librarian.books
(
    book_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    description VARCHAR(200),
    release_date DATE NOT NULL,
    number_of_pages INTEGER NOT NULL,
    rate INTEGER
);

CREATE TABLE IF NOT EXISTS librarian.likes_books_users_link
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    book_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    FOREIGN KEY (book_id) REFERENCES librarian.books(book_id),
    FOREIGN KEY (user_id) REFERENCES librarian.users(user_id)
);

CREATE TABLE IF NOT EXISTS librarian.friendship_user_to_user_link
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INTEGER NOT NULL,
    friend_id INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES librarian.users(user_id),
    FOREIGN KEY (friend_id) REFERENCES librarian.users(user_id)
);

CREATE TABLE IF NOT EXISTS librarian.books_genre_link
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    book_id INTEGER NOT NULL,
    genre_id INTEGER NOT NULL,
    FOREIGN KEY (book_id) REFERENCES librarian.books(book_id),
    FOREIGN KEY (genre_id) REFERENCES librarian.genre(genre_id)
);

ALTER TABLE librarian.books_genre_link
ADD UNIQUE (book_id, genre_id)
;

create table IF NOT EXISTS librarian.book_authors
(
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    book_id     INTEGER not null,
    author_id INTEGER not null,
       FOREIGN KEY (book_id) REFERENCES librarian.books(book_id) ON delete CASCADE,
        FOREIGN KEY (author_id) REFERENCES librarian.authors(author_id)
);
